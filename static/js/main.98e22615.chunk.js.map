{"version":3,"sources":["components/auth/user-auth.js","contextclass.js","components/templates/headerright.js","components/templates/headermiddle.js","components/templates/header.js","components/templates/footer.js","components/auth/signup.js","components/auth/login.js","components/propping/comment.js","components/propping/chat.js","components/propping/play.js","components/terms/terms.js","App.js","serviceWorker.js","index.js"],"names":["UserAuth","react_default","a","createElement","className","Component","Context","createContext","Provider","props","data","id","name","localStorage","getItem","authenticated","value","auth","children","HeaderRight","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","authenticate","context","athenticated","setState","state","document","location","console","log","signout","setItem","removeItem","activateForceUpdate","style","display","onClick","src","process","alt","react_router_dom","to","contextType","HeaderMiddle","getNewestPlayers","fetch","method","body","JSON","stringify","headers","Content-Type","Accept","then","res","json","response_msg","showNewestPlayers","result","newestplayers","map","item","displayedname","index","key","Header","headermiddle","headerright","Footer","Signup","signup","event","preventDefault","email","password","firstname","lastname","dateofbirth","gender","movingToPlay","token","error","catch","window","handleChange","bind","assertThisInitialized","target","defineProperty","react","backgroundImage","backgroundRepeat","backgroundSize","onSubmit","type","placeholder","onChange","required","autoFocus","defaultValue","Login","isauthenticated","getElementById","click","react_router","pathname","Comment","setMessage","e","message","propping_id","onKeyPress","Chat","fectchPlayers","players","fectchMessages","messages","runFetchMessages","setTimeout","fectchplayers","runfetchmessages","Play","addplayer","checkPropping","isProppingReady","numberofplayers","fetchplayers","_id","reloadPage","playerids","comment","chat","Terms","App","contextclass_Provider","header","exact","path","component","footer","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98e22615.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass UserAuth extends Component {\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"user-auth\">\r\n      <h1>User Auth</h1>\r\n    </div>);\r\n  }\r\n    \r\n}\r\n\r\nexport default UserAuth;\r\n","import React, { createContext } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nexport const Provider = props => {\r\n    let auth= \"Sign Up\";\r\n    \r\n    const data = {\r\n        id: \"init id\",\r\n        name: localStorage.getItem(\"shuffle_name\"),\r\n        authenticated: localStorage.getItem(\"shuffle_authenticated\")\r\n    };\r\n\r\n    let players = [];\r\n\r\n    let fetchplayers = false;\r\n\r\n    let propping_id = \"\";\r\n\r\n        return (\r\n            <Context.Provider value={[data, (id, auth) => {data.id = id; data.authenticated = auth;}, players, fetchplayers, propping_id, auth, (name) => {data.name = name;}]} >\r\n                {props.children}\r\n            </Context.Provider>\r\n        );\r\n\r\n}","import React, { Component } from 'react';\r\nimport './templates.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {Context} from '../../contextclass';\r\n\r\nclass HeaderRight extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            auth: \"\",\r\n            name: \"\"\r\n        }\r\n    }\r\n    \r\n    static contextType = Context;\r\n\r\n    authenticate = () => {\r\n        let name = localStorage.getItem(\"shuffle_name\");\r\n        if( this.context[0].athenticated === true || this.context[0].athenticated === \"true\" ){\r\n            this.setState({ auth: true }, () => {\r\n                if( this.state.auth === true || this.state.auth === \"true\" ){\r\n                    document.location = \"./play\";\r\n                    console.log(\"headerright's balling!\"+this.state.auth);\r\n                }\r\n            });\r\n        }else if( this.context[0].athenticated === false || this.context[0].athenticated === \"false\" ){\r\n        this.setState({ auth: false }, () => {\r\n            if( this.state.auth === false || this.state.auth === \"false\" ){\r\n                document.location = \"./\";\r\n                console.log(\"headerright's!\"+this.state.auth);\r\n            }\r\n        });\r\n        }\r\n\r\n        this.setState({ \"name\": name });\r\n    }\r\n\r\n    signout = () => {\r\n        localStorage.setItem(\"shuffle_authenticated\", false);\r\n        localStorage.removeItem(\"shuffle_id\");\r\n        localStorage.removeItem(\"shuffle_name\");\r\n        localStorage.removeItem(\"shuffle_token\");\r\n        this.setState({ auth: localStorage.getItem(\"shuffle_authenticated\") }, () => {\r\n            this.context[1](\"\", false);\r\n            if( this.state.auth === \"false\" || this.state.auth === false ){\r\n                document.location = \"./\";\r\n            }\r\n        });\r\n        \r\n        console.log(\"auth is now: \"+this.state.auth);\r\n    }\r\n\r\n    activateForceUpdate = () => {\r\n        this.setState( { auth: true } );\r\n        this.setState( { name: localStorage.getItem(\"shuffle_name\") } );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState( { auth: this.context[0].authenticated } );\r\n    }\r\n\r\n    render(){\r\n        if( this.state.auth === \"true\" || this.state.auth === true ){\r\n            console.log(\"THIS IS WHAT AUTH HAS BECOME: \"+this.state.auth);\r\n            return ( \r\n                <div className=\"header-right\">\r\n                    <div style={ { display: \"none\" } }>\r\n                        <button id=\"updateHeaderRight\" onClick={ this.activateForceUpdate }></button>\r\n                    </div>\r\n                    <div className=\"name\"><img src={ process.env.PUBLIC_URL+\"/uploads/profileimages/default.png\" } alt=\"profile pic\" />{ localStorage.getItem(\"shuffle_name\") }</div>\r\n                    <div className=\"sign-out\" onClick={ this.signout }>Sign Out</div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n            <div className=\"header-right\">\r\n                <div style={ { display: \"none\" } }>\r\n                    <button id=\"updateHeaderRight\" onClick={ this.activateForceUpdate }></button>\r\n                </div>\r\n                <div className=\"sign-up\"><Link to=\"./signup\">Sign Up</Link></div>\r\n                <div className=\"sign-in\"><Link to=\"./\">Sign In</Link></div>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default HeaderRight;","import React, { Component } from 'react';\r\nimport './templates.css';\r\n\r\nclass HeaderMiddle extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            newestplayers: []\r\n        }\r\n    }\r\n    \r\n    \r\n    getNewestPlayers = () => {\r\n        const id = localStorage.getItem(\"shuffle_id\");\r\n\r\n        fetch('https://obscure-basin-21374.herokuapp.com/newestplayers', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id: id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"newest players\" ? this.showNewestPlayers( body.result ) : console.log(\"could not retrieve stats\")));\r\n    }\r\n\r\n    showNewestPlayers = ( result ) => {\r\n        const newestplayers = result.map( (item) => ( { name: item.displayedname } ) );\r\n        this.setState( { newestplayers: newestplayers } );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getNewestPlayers();\r\n    }\r\n\r\n    render(){\r\n     return (\r\n        <div className=\"header-middle\">\r\n            Welcome: { this.state.newestplayers.map( ( item, index ) =>\r\n                <div key={ index } className=\"header-pellet\">{ item.name }</div>\r\n            )}\r\n        </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default HeaderMiddle;","import React from 'react';\r\nimport './templates.css';\r\nimport HeaderRight from './headerright';\r\nimport HeaderMiddle from './headermiddle';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <div className=\"logo\">\r\n            {/*<img src={ process.env.PUBLIC_URL+\"/logo.png\" }  alt=\"Cariprop logo\" />*/}\r\n            <Link to=\"./play\">Shuffle</Link>\r\n        </div>\r\n        <HeaderMiddle />\r\n        <HeaderRight />\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './templates.css'\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n        <footer className=\"footer text-center\">\r\n            Invite your friends from Facebook and Twitter to join Shuffle.com.<br />\r\n            {/* Facebook and Twitter share buttons */}\r\n                    \r\n            Shuffle @2019 <Link to=\"./terms\">Shuffle's Terms of Use and Privacy Policy</Link>\r\n        </footer>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Signup extends Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        displayedname: \"\",\r\n        gender: \"\",\r\n        dateofbirth: \"\",\r\n        error: \"\"\r\n      };\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n    let id = event.target.id;\r\n    let value = event.target.value;\r\n    this.setState({[id]: value});\r\n  }\r\n\r\n  signup = (event) => {\r\n      event.preventDefault();\r\n      \r\n      fetch('https://obscure-basin-21374.herokuapp.com/signup', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ \r\n            email: this.state.email, \r\n            password: this.state.password,\r\n            firstname: this.state.firstname, \r\n            lastname: this.state.lastname,\r\n            displayedname: this.state.displayedname, \r\n            dateofbirth: this.state.dateofbirth,\r\n            gender: this.state.gender \r\n          }),\r\n          headers: { 'Content-Type': 'application/json' }\r\n      })\r\n      .then(res => res.json())\r\n      .then((body) => (body.response_msg === \"You were just signed up!\" ? this.movingToPlay(body.id, body.name, body.token) : this.setState({ \"error\": body.response_msg })))\r\n      .catch((error) => {\r\n        console.log(\"Error message: \"+error);\r\n      });\r\n  }\r\n\r\n  movingToPlay = (id, name, token) => {\r\n    localStorage.setItem(\"shuffle_authenticated\", true);\r\n    localStorage.setItem(\"shuffle_token\", token);\r\n    localStorage.setItem(\"shuffle_name\", name);\r\n    localStorage.setItem(\"shuffle_id\", id );\r\n    window.location = \"/play\";\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        <div className=\"auth-scontainer\" style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/background.png)\", backgroundRepeat: \"no-repeat\", backgroundSize: \"100%\"}}>\r\n            <div className=\"auth\">\r\n                <div className=\"error_msg\">{ this.state.error }</div>\r\n                <form onSubmit={ this.signup } className=\"form-signup\">\r\n                <h5 className=\"h3 mb-3 font-weight-normal\">Sign up for Shuffle</h5>\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" onChange={ this.handleChange } required autoFocus />\r\n                <label className=\"sr-only\">Password</label>\r\n                <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">First Name</label>\r\n                <input type=\"text\" id=\"firstname\" className=\"form-control\" placeholder=\"First Name\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">Last Name</label>\r\n                <input type=\"text\" id=\"lastname\" className=\"form-control\" placeholder=\"Last Name\" onChange={ this.handleChange } required />\r\n                <label className=\"sr-only\">Displayed Name</label>\r\n                <input type=\"text\" id=\"displayedname\" className=\"form-control\" placeholder=\"Displayed Name (What others will see)\" onChange={ this.handleChange } required />\r\n                <select id=\"gender\" className=\"custom-select\" onChange={ this.handleChange } required>\r\n                  <option defaultValue>Gender</option>\r\n                  <option></option>\r\n                  <option>Female</option>\r\n                  <option>Male</option>\r\n                </select>\r\n                <label className=\"sr-only\">Date of Birth</label>\r\n                <input type=\"date\" id=\"dateofbirth\" className=\"form-control\" placeholder=\"MM/DD/YYYY\" onChange={ this.handleChange } required />\r\n                <div className=\"checkbox mb-3\">\r\n                    <label>\r\n                    By signing up you agree to the <Link to=\"./terms\" target=\"_blank\">Terms of Use and Privacy Policies of Shuffle</Link>.\r\n                    </label>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\" />\r\n                </form>\r\n                <br />\r\n                <br />\r\n                \r\n                <Link to=\"/\">Back Sign In</Link>\r\n            </div>\r\n          </div>\r\n      </Fragment>);\r\n    }\r\n    \r\n  }\r\n\r\n  export default Signup;","import React, { Component, Fragment } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport {Context} from '../../contextclass';\r\nimport './user-auth.css';\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            token: \"\",\r\n            error: \"\",\r\n            isauthenticated: false\r\n        };\r\n\r\n       this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    handleChange(event){\r\n        let id = event.target.id;\r\n        let value = event.target.value;\r\n        this.setState({[id]: value});     \r\n    }\r\n\r\n    authenticate = event => {\r\n        event.preventDefault();\r\n\r\n        fetch('https://obscure-basin-21374.herokuapp.com/auth', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email: this.state.email, password: this.state.password }),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"You are authorized to proceed!\" ? this.setState({id: body.id, name: body.name, token: body.token, isauthenticated: true}) : this.setState({error: \"The email or password is incorrect.\"})));\r\n    }\r\n    \r\n    componentDidMount(){\r\n        console.log(\"context in login: \"+this.context[0].authenticated)\r\n    }\r\n\r\n    render() {                \r\n        if(this.state.isauthenticated === true){\r\n            localStorage.setItem(\"shuffle_id\", this.state.id);\r\n            localStorage.setItem(\"shuffle_name\", this.state.name);\r\n            localStorage.setItem(\"shuffle_authenticated\", \"true\");\r\n            localStorage.setItem(\"shuffle_token\", this.state.token);\r\n            this.context[1](this.state.id, true);\r\n            this.context[6](this.state.name);\r\n            document.getElementById(\"updateHeaderRight\").click();\r\n            return (<div>\r\n                <Redirect to={{\r\n                    pathname: '/play',\r\n                    state: \"\"\r\n                }} />\r\n            </div>);\r\n        }else{\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"auth-scontainer\" style={{backgroundImage: \"url(\"+process.env.PUBLIC_URL+\"/background.png)\", backgroundRepeat: \"no-repeat\", backgroundSize: \"100%\"}}>\r\n                    <div className=\"succint-hiw\">\r\n                        Watch an ad for the chance to win some money for yourself and a charity.\r\n                    </div>\r\n                    <div className=\"auth\">\r\n                        <div className=\"error_msg\">{ this.state.error }</div>\r\n                        <form onSubmit={ this.authenticate } className=\"form-signin\">\r\n                        <h5 className=\"h3 mb-3 font-weight-normal\">Please sign in</h5>\r\n                        <label className=\"sr-only\">Email address</label>\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" onChange={ this.handleChange } required autoFocus />\r\n                        <label className=\"sr-only\">Password</label>\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={ this.handleChange } required />\r\n                        <div className=\"checkbox mb-3\">\r\n                            <label>\r\n                            <input type=\"checkbox\" value=\"remember-me\" /> Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\r\n                        </form>\r\n\r\n                        <Link to=\"/signup\">Create an account!</Link>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"hiw\">\r\n                        <h4>How it works!</h4>\r\n                        <p>Sign in, watch an ad to earn some money credits, put yours and 9 other people's credits in a pool and vote for who takes it all, cash out and give any percentage of your winnings (could be 1% could be 100%) to a selected charity, that's it. Even if someone else wins a round, you have just contributed towards a good charity. You've done some good. And also, you can play as many times as you want.</p>\r\n                    </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n    \r\n  }\r\n  \r\nexport default Login;","import React, { Component, Fragment } from 'react';\r\nimport './propping.css';\r\n\r\nclass Comment extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    setMessage = (e) => {\r\n        const message = e.target.value;\r\n        this.setState( { message: message } )\r\n    }\r\n\r\n    message = () => {\r\n        const id = localStorage.getItem(\"id\");\r\n        const name = localStorage.getItem(\"name\");\r\n        const message = document.getElementById('message').value;\r\n        const propping_id = this.props.name;\r\n        \r\n        document.getElementById('message').value = \"\";\r\n        \r\n        fetch('https://obscure-basin-21374.herokuapp.com/message', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id: id, name: name, message: message, propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Message was successfully inserted!\" ? console.log(\"Message sent!\") : console.log(\"could not retrieve players\")));\r\n    }\r\n\r\n    render(){ \r\n        return (\r\n            <Fragment>\r\n                <input type=\"text\" onKeyPress={ this.setMessage } id=\"message\" className=\"comment_input\" placeholder=\"Say something!\" />\r\n                <input type=\"button\" onClick={ this.message }  className=\"btn btn-primary\" value=\">>\" />                        \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, { Component, Fragment } from 'react';\r\nimport {Context} from '../../contextclass';\r\nimport './propping.css'\r\n\r\nclass Chat extends Component {    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: localStorage.getItem(\"shuffle_id\"),\r\n            players: [],\r\n            messages: [],\r\n            fectchplayers: false,\r\n            runfetchmessages: true\r\n        }\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    componentDidMount(){\r\n        const propping_id = this.props.name;\r\n        this.setState({ propping_id: propping_id });\r\n        this.fectchPlayers(propping_id);\r\n        this.runFetchMessages()\r\n    }\r\n     \r\n\r\n    fectchPlayers = ( propping_id ) =>{\r\n        //do settimeout to check periodically\r\n        this.setState({ propping_id: propping_id });\r\n        fetch('https://obscure-basin-21374.herokuapp.com/players', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the players!\" ? this.setState({ players: body.players }) : console.log(\"could not retrieve players\")));\r\n    }\r\n\r\n    fectchMessages = ( propping_id ) =>{\r\n        //do settimeout to check periodically\r\n        fetch('https://obscure-basin-21374.herokuapp.com/fetchmessages', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the messages!\" ? this.setState( { messages: body.messages } ) /*this.setState({ messages: body.messages })*/ : console.log(\"could not retrieve messages\")));\r\n    }\r\n\r\n    runFetchMessages = () => {\r\n        console.log(\"We're in messages:\");\r\n        setTimeout(() => {\r\n            this.fectchMessages( this.props.name );\r\n            this.runFetchMessages();\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    render(){ \r\n        return (\r\n            <Fragment>\r\n                <div className=\"messages\">\r\n                    { this.state.messages.map((item, index) =>\r\n                        <div key={ index } className=\"message\">\r\n                            { item.name+' | ' }{ item.message }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"players\">\r\n                    { this.state.players.map((item, index) =>\r\n                    <div key={ index } className=\"player\">\r\n                        <div className=\"name\">\r\n                            <img src={ process.env.PUBLIC_URL+\"/uploads/profileimages/default.png\" } alt=\"profile\" />\r\n                            { item.displayedname }\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;","import React, { Component } from 'react';\r\nimport Comment from './comment'\r\nimport Chat from './chat';\r\nimport {Context} from '../../contextclass';\r\nimport './propping.css'\r\n\r\nclass Play extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: 1,\r\n            email: \"email1\",\r\n            numberofplayers: 0,\r\n            playerids: [],\r\n            players: [],\r\n            propping_id: 0,\r\n            fetchplayers: false\r\n        }\r\n\r\n    }\r\n\r\n    static contextType = Context;\r\n\r\n    componentDidMount(){\r\n        this.addplayer();\r\n    }\r\n\r\n    addplayer = () => {\r\n        const id = localStorage.getItem(\"shuffle_id\");\r\n        const name = localStorage.getItem(\"shuffle_name\");\r\n        fetch('https://obscure-basin-21374.herokuapp.com/addplayer', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id: id, name: name }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Player Added\" ? this.checkPropping( body.propping_id ) : console.log(\"could not add player!\")));\r\n    }\r\n\r\n    isProppingReady = ( propping_id, numberofplayers ) => {\r\n        if(numberofplayers < 2){ \r\n            this.setState({ numberofplayers: numberofplayers })\r\n            setTimeout( this.checkPropping( propping_id ), 2000 );\r\n        }else{\r\n            this.context[3] = true;\r\n            this.context[4] = propping_id;\r\n            this.setState({ propping_id: propping_id });\r\n            this.setState({ fetchplayers: true });\r\n        }\r\n    }\r\n\r\n    checkPropping = ( propping_id ) => {\r\n        //this.setState({ \"propping_id\": propping_id });\r\n        fetch('https://obscure-basin-21374.herokuapp.com/playersfrompropping', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ propping_id: propping_id }),\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then((body) => (body.response_msg === \"Here are the players!\" ? this.isProppingReady( body.players[0]._id, body.players[0].numberofplayers ) : console.log(\"could not retrieve players\")));\r\n    } \r\n\r\n    reloadPage = () => {\r\n        document.location = \"./play\";\r\n    }\r\n\r\n    render(){ \r\n        if( this.state.fetchplayers === true ){\r\n            return ( \r\n                <section>\r\n                <div className=\"play-container\">  \r\n                    <div className=\"play-instructions\">\r\n                    <h4>Shuffle along...!</h4>\r\n                    </div>\r\n                    <div className=\"play-comment\">\r\n                        <Comment name={ this.state.propping_id } />\r\n                    </div>\r\n                    <div className=\"play-chat\">\r\n                        <Chat name={ this.state.propping_id } />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n            );\r\n        }else{\r\n        return (\r\n            <section>\r\n            <div className=\"play-container\">  \r\n                <div className=\"play-instructions\">\r\n                    <h6>Waiting for at least one other person to join...</h6>\r\n                        <br /><br />\r\n                        <h6>If it's taking too long, invite your friends from Facebook and Twitter to join Shuffle.com.</h6>\r\n                        {/* Leave game */}\r\n                        {/* Facebook and Twitter share buttons */}\r\n                </div>\r\n            </div>\r\n            </section>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Play;","import React from 'react';\r\nimport './terms.css';\r\n\r\nconst Terms = () => (\r\n    <div className=\"terms-container\">\r\n        <div className=\"terms\">\r\n            <h4>Terms of Use and Privacy Policy</h4>\r\n            <p>Shuffle reserves the right to modify the terms of use of this site.\r\n            </p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Terms;","import React from 'react';\nimport UserAuth from './components/auth/user-auth';\nimport Header from './components/templates/header';\nimport Footer from './components/templates/footer';\nimport { Route } from 'react-router-dom';\nimport Signup from './components/auth/signup';\nimport Login from './components/auth/login';\nimport Play from './components/propping/play';\nimport Terms from './components/terms/terms';\nimport {Provider} from './contextclass';\nimport './App.css'\n\nconst App = () => (\n      <div className=\"app\">\n        <Provider>\n          <div>\n            <Header />\n          </div>\n\n          <Route exact={true} path=\"./\" component={Login} />\n          <Route path=\"./signup\" component={Signup} />\n          <Route path=\"./user-auth\" component={UserAuth} />\n          <Route path=\"./play\" component={Play} />\n          <Route path=\"./terms\" component={Terms} /> \n\n          <div>\n            <Footer />\n          </div>    \n        </Provider>\n      </div>\n    );\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}